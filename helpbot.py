import telebot
from collections import defaultdict, deque
import threading
import time



TOKEN = '7298955377:AAERBmimaPqOPTEPBfqhfBB6IcetrVZeMb4'
bot = telebot.TeleBot(TOKEN)


# üîπ –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    if message.chat.type not in ['group', 'supergroup']:
        return

    text = message.text.lower()

    # 1. –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã (—Å—Å—ã–ª–∫–∏)
    if 'http://' in text or 'https://' in text or 't.me/' in text:
        try:
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, f"üö´ @{message.from_user.username},–≤ —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã —Å—Å—ã–ª–∫–∏.")
            return
        except:
            return

    # 2. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if '–ø—Ä–∏–≤–µ—Ç' in text:
        bot.reply_to(message, f"–ó–¥—Ä–∞—Å—Ç–≤—É–π –º–∞–±–æ–π, üëã")
        
    # –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ —Ñ—Ä–∞–∑—ã
    elif '–∫–∞–∫ –¥–µ–ª–∞' in text:
        bot.reply_to(message, "–ù–æ—Ä–º, —Å–∞–º –∫–∞–∫? üòé")

    elif '—á—Ç–æ –¥–µ–ª–∞–µ—à—å' in text:
        bot.reply_to(message, "–°–ª–µ–∂—É –∑–∞ —á–∞—Ç–æ–º üëÄ")

    elif '—Å–ø–∏—à—å' in text:
        bot.reply_to(message, "–ë–æ—Ç—ã –Ω–µ —Å–ø—è—Ç üò¥")

    elif '–∫—Ç–æ —Ç—ã' in text:
        bot.reply_to(message, "–Ø –±–æ—Ç, —Ç–≤–æ–π –∑–∞—â–∏—Ç–Ω–∏–∫ –æ—Ç —Å–ø–∞–º–∞ ü§ñ")

    elif '–±–æ—Ç' in text and '—Ç—É–ø–æ–π' in text:
        bot.reply_to(message, "–°–∞–º —Ç—ã —Ç–∞–∫–æ–π üò§")

    elif '—Å–ø–∞—Å–∏–±–æ' in text:
        bot.reply_to(message, "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üòä")
    elif '–∏–Ω—Ñ–∞' in text:
        bot.reply_to(message, "–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞ –º–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ : @noname_genius –∏ @jnnnnnjj")
    elif '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å' in text:
        bot.reply_to(message, "–Ø —É–º–µ—é —Å–ª–µ–¥–∏—Ç—å –∑–∞ —á–∞—Ç–æ–º,–æ–±—â–∞—Ç—Å—è)")
    elif '–±–æ—Ç' in text:
        bot.reply_to(message, "–Ø —Ç—É—Ç")    
        
                
user_contents = defaultdict(lambda: deque(maxlen=5))
user_message_ids = defaultdict(lambda: deque(maxlen=5))
user_locked = defaultdict(bool)
user_warns = defaultdict(int)  # —Å—á–µ—Ç—á–∏–∫ –≤–∞—Ä–Ω–æ–≤

MAX_WARNS = 3  # —Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–Ω–æ–≤ –¥–∞–µ–º –¥–æ –±–∞–Ω–∞ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è
LOCK_TIME = 5  # –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ—Å–ª–µ –≤–∞—Ä–Ω–∞, —Å–µ–∫

@bot.message_handler(content_types=['text', 'sticker'])
def handle_message(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    msg_id = message.message_id

    if message.content_type == 'text':
        content = f"text:{message.text}"
    elif message.content_type == 'sticker':
        content = f"sticker:{message.sticker.file_unique_id}"
    else:
        return

    if user_locked[user_id]:
        return

    user_contents[user_id].append(content)
    user_message_ids[user_id].append(msg_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∞–º (5 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–æ–¥—Ä—è–¥ —Å–æ–æ–±—â–µ–Ω–∏–π)
    if len(user_contents[user_id]) == 5 and len(set(user_contents[user_id])) == 1:
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for mid in list(user_message_ids[user_id]):
            try:
                bot.delete_message(chat_id, mid)
            except Exception as e:
                pass

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–Ω
        user_warns[user_id] += 1
        warns = user_warns[user_id]

        username = message.from_user.username or message.from_user.first_name

        if warns >= MAX_WARNS:
            # –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∞–∫—Å–∏–º—É–º–∞ –≤–∞—Ä–Ω–æ–≤
            bot.send_message(chat_id, f"üö´ @{username}, —É –≤–∞—Å {warns} –≤–∞—Ä–Ω–æ–≤. –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
            bot.ban_chat_member(message.chat.id, message.from_user.id)
            # –¢—É—Ç –º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞:
            # bot.kick_chat_member(chat_id, user_id)
            # –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤—Ä–µ–º—è
            user_locked[user_id] = True
            threading.Thread(target=unlock_user, args=(user_id,)).start()
        else:
            bot.send_message(chat_id, f"‚ö†Ô∏è @{username}, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ —Å–ø–∞–º. –í–∞—Ä–Ω—ã: {warns}/{MAX_WARNS}")
            user_locked[user_id] = True
            threading.Thread(target=unlock_user, args=(user_id,)).start()

        user_contents[user_id].clear()
        user_message_ids[user_id].clear()

def unlock_user(user_id):
    time.sleep(1)
    user_locked[user_id] = False

bot.polling(none_stop=True)