import telebot
from collections import defaultdict, deque
import threading
import time

TOKEN = '7298955377:AAERBmimaPqOPTEPBfqhfBB6IcetrVZeMb4'
bot = telebot.TeleBot(TOKEN)

user_contents = defaultdict(lambda: deque(maxlen=5))
user_message_ids = defaultdict(lambda: deque(maxlen=5))
user_locked = defaultdict(bool)
user_warns = defaultdict(int)

MAX_WARNS = 3
LOCK_TIME = 5

@bot.message_handler(content_types=['text', 'sticker'])
def handle_all_messages(message):
    if message.chat.type not in ['group', 'supergroup']:
        return

    user_id = message.from_user.id
    chat_id = message.chat.id
    msg_id = message.message_id

    if message.content_type == 'text':
        content = f"text:{message.text.strip().lower()}"
    elif message.content_type == 'sticker':
        content = f"sticker:{message.sticker.file_unique_id}"
    else:
        return

    if user_locked[user_id]:
        return

    user_contents[user_id].append(content)
    user_message_ids[user_id].append(msg_id)

    if len(user_contents[user_id]) == 5 and len(set(user_contents[user_id])) == 1:
        for mid in list(user_message_ids[user_id]):
            try:
                bot.delete_message(chat_id, mid)
            except:
                pass

        user_warns[user_id] += 1
        warns = user_warns[user_id]
        username = message.from_user.username or message.from_user.first_name

        if warns >= MAX_WARNS:
            bot.send_message(chat_id, f"üö´ @{username}, —É –≤–∞—Å {warns} –≤–∞—Ä–Ω–æ–≤. –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
            try:
                bot.ban_chat_member(chat_id, user_id)
            except:
                pass
            user_locked[user_id] = True
            threading.Thread(target=unlock_user, args=(user_id,)).start()
        else:
            bot.send_message(chat_id, f"‚ö†Ô∏è @{username}, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ —Å–ø–∞–º. –í–∞—Ä–Ω—ã: {warns}/{MAX_WARNS}")
            user_locked[user_id] = True
            threading.Thread(target=unlock_user, args=(user_id,)).start()

        user_contents[user_id].clear()
        user_message_ids[user_id].clear()

    if message.content_type == 'text':
        text = message.text.lower().strip()

        if 'http://' in text or 'https://' in text or 't.me/' in text:
            try:
                bot.delete_message(chat_id, msg_id)
                bot.send_message(chat_id, f"üö´ @{message.from_user.username}, –≤ —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã —Å—Å—ã–ª–∫–∏.")
                return
            except:
                return

        if '–ë–æ—Ç –ø—Ä–∏–≤–µ—Ç' in text:
            bot.reply_to(message, "–ó–¥—Ä–∞—Å—Ç–≤—É–π –º–∞–±–æ–π, üëã")
        elif '–ë–æ—Ç –∫–∞–∫ –¥–µ–ª–∞' in text:
            bot.reply_to(message, "–ù–æ—Ä–º, —Å–∞–º –∫–∞–∫? üòé")
        elif '–ë–æ—Ç —á—Ç–æ –¥–µ–ª–∞–µ—à—å' in text:
            bot.reply_to(message, "–°–ª–µ–∂—É –∑–∞ —á–∞—Ç–æ–º üëÄ")
        elif '–ë–æ—Ç —Å–ø–∏—à—å' in text:
            bot.reply_to(message, "–ë–æ—Ç—ã –Ω–µ —Å–ø—è—Ç üò¥")
        elif '–ë–æ—Ç –∫—Ç–æ —Ç—ã' in text:
            bot.reply_to(message, "–Ø –±–æ—Ç, —Ç–≤–æ–π –∑–∞—â–∏—Ç–Ω–∏–∫ –æ—Ç —Å–ø–∞–º–∞ ü§ñ")
        elif '–±–æ—Ç' in text and '—Ç—É–ø–æ–π' in text:
            bot.reply_to(message, "–°–∞–º —Ç—ã —Ç–∞–∫–æ–π üò§")
        elif '–ë–æ—Ç —Å–ø–∞—Å–∏–±–æ' in text:
            bot.reply_to(message, "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üòä")
        elif '–ë–æ—Ç –∏–Ω—Ñ–∞' in text:
            bot.reply_to(message, "–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞, –º–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏: @noname_genius –∏ @jnnnnnjj")
        elif '–ë–æ—Ç —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å' in text:
            bot.reply_to(message, "–Ø —É–º–µ—é —Å–ª–µ–¥–∏—Ç—å –∑–∞ —á–∞—Ç–æ–º, –æ–±—â–∞—Ç—å—Å—è)")
        elif text == '–ì–∏–≥–∞—á–∞–¥':
            bot.reply_to(message, "–Ø —Ç—É—Ç")

def unlock_user(user_id):
    time.sleep(LOCK_TIME)
    user_locked[user_id] = False

bot.polling(none_stop=True)